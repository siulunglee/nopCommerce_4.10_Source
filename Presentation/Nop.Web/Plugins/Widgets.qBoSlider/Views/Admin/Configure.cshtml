@{
    Layout = "_ConfigurePlugin";
}
@model ConfigurationModel
@inject IEventPublisher eventPublisher
@using Nop.Plugin.Widgets.qBoSlider.Models;
@using Nop.Services.Events;
@using Nop.Web.Framework.Events;

<div class="content">
    <div class="form-horizontal">
        <nop-tabs id="slider-configuration">
            <nop-tab asp-name="tab-collection" asp-title="@T("Plugins.Widgets.qBoSlider.SlideCollection")" asp-default="true">
                @await Html.PartialAsync("~/Plugins/Widgets.qBoSlider/Views/Admin/_SlideCollection.cshtml", Model)
            </nop-tab>
            <nop-tab asp-name="tab-settings" asp-title="@T("Plugins.Widgets.qBoSlider.SliderSettings")">
                @await Html.PartialAsync("~/Plugins/Widgets.qBoSlider/Views/Admin/_PluginSettings.cshtml", Model)
            </nop-tab>
        </nop-tabs>
    </div>
</div>

@{
    //custom tabs
    var eventMessage = new AdminTabStripCreated(this.Html, "slider-configuration");
    eventPublisher.Publish(eventMessage);
    foreach (var eventBlock in eventMessage.BlocksToRender)
    {
        @eventBlock
    }
}
